spring:
  datasource:
    url: jdbc:mysql://localhost:3306/kakao_gamification?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=True
    username: root
    password: 123456a@
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        order_inserts: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
        jdbc:
          batch_size: 200
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 454714594333-9s0k5egl9hvq6q9g4rgsteg7i8pn2ebj.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback"
            scope:
              - email
              - profile
          facebook:
            clientId: 3106848232869961
            clientSecret: af100197a1e999474e032628e3d027ab
            redirectUri: "{baseUrl}/oauth2/callback"
            scope:
              - email
              - public_profile
          twitter:
            clientId: X1dUMnUzZzlTM3Zka2lMamtfeG06MTpjaQ
            clientSecret: P9kKXtnAtY7dg3gZ3GTdO2LJeIvZg7WJluR419Bt0k-ix824_J
            redirectUri: "{baseUrl}/oauth2/callback"
            authorizationGrantType: authorization_code
            scope:
              - tweet.read
              - users.read
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/me?fields=id,name,email,picture
          twitter:
            authorizationUri: https://twitter.com/i/oauth2/authorize?&code_challenge=challenge&code_challenge_method=plain
            tokenUri: https://api.twitter.com/2/oauth2/token?code_verifier=challenge
            userInfoUri: https://api.twitter.com/2/users/me?user.fields=id,name,profile_image_url,url,username
            userNameAttribute: data
  application:
    name: auth-service
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:5173 # Comma separated list of allowed origins
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:5173/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
server:
  port: 8081
  servlet:
    context-path: /auth